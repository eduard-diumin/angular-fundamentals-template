{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@fortawesome/angular-fontawesome\";\nimport * as i3 from \"../../../services/courses-store.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../button/button.component\";\nfunction CourseFormComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CourseFormComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"Description is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CourseFormComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"app-button\", 25);\n    i0.ɵɵlistener(\"click\", function CourseFormComponent_div_31_Template_app_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const author_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.removeAuthorFromCourse(author_r4.value, i_r5));\n    });\n    i0.ɵɵtext(4, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const author_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(author_r4.value.name);\n  }\n}\nfunction CourseFormComponent_span_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \"Duration is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let CourseFormComponent = /*#__PURE__*/(() => {\n  class CourseFormComponent {\n    constructor(fb, library, coursesStore, router, route) {\n      this.fb = fb;\n      this.library = library;\n      this.coursesStore = coursesStore;\n      this.router = router;\n      this.route = route;\n      this.isEditMode = false;\n      this.courseId = null;\n      this.submitted = false;\n      this.allAuthors = [];\n      this.courseAuthors = [];\n      library.addIconPacks(fas);\n      this.courseForm = this.fb.group({\n        title: [\"\", [Validators.required, Validators.minLength(2)]],\n        description: [\"\", [Validators.required, Validators.minLength(2)]],\n        duration: [0, [Validators.required, Validators.min(0)]],\n        authors: this.fb.array([]),\n        author: [\"\", [Validators.required, Validators.minLength(2), Validators.pattern(\"^[a-zA-Z0-9]+$\")]]\n      });\n    }\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        this.courseId = params.get(\"id\");\n        this.isEditMode = !!this.courseId;\n        if (this.isEditMode && this.courseId) {\n          this.coursesStore.getCourse(this.courseId).subscribe(course => {\n            if (course) {\n              this.courseForm.patchValue({\n                title: course.title,\n                description: course.description,\n                duration: course.duration\n              });\n              // TODO: authors integration\n            }\n          });\n        }\n      });\n\n      this.coursesStore.getAllAuthors().subscribe(authors => {\n        this.allAuthors = authors;\n      });\n    }\n    get authors() {\n      return this.courseForm.get(\"authors\");\n    }\n    get newAuthorGroup() {\n      return this.courseForm.get(\"newAuthor\");\n    }\n    addAuthorToCourse(author) {\n      this.courseAuthors.push(author);\n      this.authors.push(new FormControl(author));\n      this.allAuthors = this.allAuthors.filter(a => a.id !== author.id);\n    }\n    removeAuthorFromCourse(author, index) {\n      this.allAuthors.push(author);\n      this.courseAuthors = this.courseAuthors.filter(a => a.id !== author.id);\n      this.authors.removeAt(index);\n    }\n    createAuthor() {\n      const authorControl = this.courseForm.get(\"author\");\n      const name = authorControl?.value;\n      if (authorControl?.valid) {\n        const newAuthor = {\n          id: Math.random().toString(36).substring(2, 10),\n          name\n        };\n        this.allAuthors.push(newAuthor);\n        authorControl.reset();\n      }\n    }\n    onSubmit() {\n      this.submitted = true;\n      if (this.courseForm.valid && this.courseAuthors.length > 0) {\n        const courseData = {\n          ...this.courseForm.value,\n          authors: this.courseAuthors.map(a => a.id)\n        };\n        if (this.isEditMode && this.courseId) {\n          this.coursesStore.editCourse(this.courseId, courseData);\n        } else {\n          this.coursesStore.createCourse(courseData);\n        }\n        this.router.navigate([\"/courses\"]);\n      }\n    }\n  }\n  CourseFormComponent.ɵfac = function CourseFormComponent_Factory(t) {\n    return new (t || CourseFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FaIconLibrary), i0.ɵɵdirectiveInject(i3.CoursesStoreService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  CourseFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourseFormComponent,\n    selectors: [[\"app-course-form\"]],\n    decls: 43,\n    vars: 6,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"app-plate\"], [1, \"course\"], [1, \"form__control\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"placeholder\", \"Input text\", \"required\", \"\", \"formControlName\", \"title\"], [\"id\", \"titleErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"placeholder\", \"Input text\", \"rows\", \"4\", \"cols\", \"5\", \"formControlName\", \"description\", \"required\", \"\"], [\"id\", \"descriptionErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [1, \"separator\"], [1, \"course__flex\"], [\"type\", \"text\", \"id\", \"author\", \"placeholder\", \"Input Author Name\", \"formControlName\", \"author\"], [\"id\", \"createAuthor\", 3, \"click\"], [\"id\", \"authorErrorMessage\"], [1, \"course__authors\"], [\"formArrayName\", \"authors\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"id\", \"duration\", \"placeholder\", \"Input duration\", \"formControlName\", \"duration\", \"required\", \"\"], [1, \"course__duration\"], [\"id\", \"durationErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [1, \"form__action\"], [\"id\", \"titleErrorMessage\", 1, \"text-danger\"], [\"id\", \"descriptionErrorMessage\", 1, \"text-danger\"], [3, \"formGroupName\"], [3, \"click\"], [\"id\", \"durationErrorMessage\", 1, \"text-danger\"]],\n    template: function CourseFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Create / Edit Course\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CourseFormComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"h3\");\n        i0.ɵɵtext(6, \"Main Info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵtemplate(11, CourseFormComponent_span_11_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"textarea\", 8);\n        i0.ɵɵtemplate(16, CourseFormComponent_span_16_Template, 2, 0, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"div\", 10);\n        i0.ɵɵelementStart(18, \"h3\");\n        i0.ɵɵtext(19, \"Authors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"div\", 11);\n        i0.ɵɵelement(22, \"input\", 12);\n        i0.ɵɵelementStart(23, \"app-button\", 13);\n        i0.ɵɵlistener(\"click\", function CourseFormComponent_Template_app_button_click_23_listener() {\n          return ctx.createAuthor();\n        });\n        i0.ɵɵtext(24, \"Create Author\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"span\", 14);\n        i0.ɵɵtext(26, \"New author should contain only latin letters and numbers.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 15)(28, \"h4\");\n        i0.ɵɵtext(29, \"All Authors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerStart(30, 16);\n        i0.ɵɵtemplate(31, CourseFormComponent_div_31_Template, 5, 2, \"div\", 17);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(32, \"div\", 10);\n        i0.ɵɵelementStart(33, \"h3\");\n        i0.ɵɵtext(34, \"Duration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 3)(36, \"div\", 11);\n        i0.ɵɵelement(37, \"input\", 18);\n        i0.ɵɵelementStart(38, \"div\", 19);\n        i0.ɵɵtext(39);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(40, CourseFormComponent_span_40_Template, 2, 0, \"span\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 21);\n        i0.ɵɵelement(42, \"app-button\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.courseForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", (ctx.submitted || ctx.courseForm.controls[\"title\"].touched) && (ctx.courseForm.controls[\"title\"].errors == null ? null : ctx.courseForm.controls[\"title\"].errors[\"required\"]));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.submitted || ctx.courseForm.controls[\"description\"].touched) && (ctx.courseForm.controls[\"description\"].errors == null ? null : ctx.courseForm.controls[\"description\"].errors[\"required\"]));\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.authors.controls);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.courseForm.controls[\"duration\"].value, \" hours \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.submitted || ctx.courseForm.controls[\"duration\"].touched) && (ctx.courseForm.controls[\"duration\"].errors == null ? null : ctx.courseForm.controls[\"duration\"].errors[\"required\"]));\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i6.ButtonComponent],\n    styles: [\".app-plate[_ngcontent-%COMP%]{width:100%;min-height:477px;background-color:#fff;border:1px solid #CFCFCF;border-radius:4px;padding:32px;display:flex;justify-content:center}.text-align-center[_ngcontent-%COMP%]{text-align:center}.app-error-text[_ngcontent-%COMP%]{color:red;position:absolute;margin-top:4px}.form__control[_ngcontent-%COMP%]{margin-bottom:24px}.form__action[_ngcontent-%COMP%]{margin-top:54px}.form__text[_ngcontent-%COMP%]{text-align:center;margin-top:38px;flex-wrap:wrap}.separator[_ngcontent-%COMP%]{width:100%;border-bottom:1px solid #CFCFCF}.text-danger[_ngcontent-%COMP%]{color:red}.course[_ngcontent-%COMP%]{min-width:60vw}.course__flex[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:baseline}.course__flex[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{flex:1}.course__flex[_ngcontent-%COMP%]   app-button[_ngcontent-%COMP%]{margin-left:16px}.course__flex[_ngcontent-%COMP%]   .course__duration[_ngcontent-%COMP%]{margin-left:16px}.course__authors[_ngcontent-%COMP%]{margin-top:8px;display:flex}.course__authors-item[_ngcontent-%COMP%]{margin-right:10px}.course__icon[_ngcontent-%COMP%]{margin-left:4px;cursor:pointer}\"]\n  });\n  return CourseFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}