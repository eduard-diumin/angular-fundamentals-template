{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./courses.service\";\nexport let CoursesStoreService = /*#__PURE__*/(() => {\n  class CoursesStoreService {\n    constructor(coursesService) {\n      this.coursesService = coursesService;\n      this.isLoading$$ = new BehaviorSubject(false);\n      this.courses$$ = new BehaviorSubject([]);\n      this.isLoading$ = this.isLoading$$.asObservable();\n      this.courses$ = this.courses$$.asObservable();\n    }\n    getAll() {\n      this.isLoading$$.next(true);\n      this.coursesService.getAll().pipe(finalize(() => this.isLoading$$.next(false))).subscribe(courses => this.courses$$.next(courses));\n    }\n    createCourse(course) {\n      this.isLoading$$.next(true);\n      this.coursesService.createCourse(course).pipe(finalize(() => this.isLoading$$.next(false))).subscribe(() => this.getAll());\n    }\n    editCourse(id, course) {\n      this.isLoading$$.next(true);\n      this.coursesService.editCourse(id, course).pipe(finalize(() => this.isLoading$$.next(false))).subscribe(() => this.getAll());\n    }\n    getCourse(id) {\n      return this.coursesService.getCourse(id);\n    }\n    deleteCourse(id) {\n      this.isLoading$$.next(true);\n      this.coursesService.deleteCourse(id).pipe(finalize(() => this.isLoading$$.next(false))).subscribe(() => this.getAll());\n    }\n    filterCourses(value) {\n      this.isLoading$$.next(true);\n      this.coursesService.filterCourses(value).pipe(finalize(() => this.isLoading$$.next(false))).subscribe(courses => this.courses$$.next(courses));\n    }\n    getAllAuthors() {\n      return this.coursesService.getAllAuthors();\n    }\n    createAuthor(name) {\n      return this.coursesService.createAuthor(name);\n    }\n    getAuthorById(id) {\n      return this.coursesService.getAuthorById(id);\n    }\n  }\n  CoursesStoreService.ɵfac = function CoursesStoreService_Factory(t) {\n    return new (t || CoursesStoreService)(i0.ɵɵinject(i1.CoursesService));\n  };\n  CoursesStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CoursesStoreService,\n    factory: CoursesStoreService.ɵfac,\n    providedIn: \"root\"\n  });\n  return CoursesStoreService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}