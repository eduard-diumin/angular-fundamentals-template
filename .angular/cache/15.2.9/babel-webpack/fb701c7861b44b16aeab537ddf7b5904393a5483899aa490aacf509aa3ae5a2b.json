{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user.service\";\nexport let UserStoreService = /*#__PURE__*/(() => {\n  class UserStoreService {\n    constructor(userService) {\n      this.userService = userService;\n      this.name$$ = new BehaviorSubject(\"\");\n      this.isAdmin$$ = new BehaviorSubject(false);\n      this.name$ = this.name$$.asObservable();\n      this.isAdmin$ = this.isAdmin$$.asObservable();\n    }\n    getUser() {\n      this.userService.getUser().subscribe(user => {\n        this.name$$.next(user?.name || \"\");\n        this.isAdmin$$.next(!!user?.isAdmin);\n      });\n    }\n    get isAdmin() {\n      return this.isAdmin$$.value;\n    }\n    set isAdmin(value) {\n      this.isAdmin$$.next(value);\n    }\n  }\n  UserStoreService.ɵfac = function UserStoreService_Factory(t) {\n    return new (t || UserStoreService)(i0.ɵɵinject(i1.UserService));\n  };\n  UserStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserStoreService,\n    factory: UserStoreService.ɵfac,\n    providedIn: \"root\"\n  });\n  return UserStoreService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}